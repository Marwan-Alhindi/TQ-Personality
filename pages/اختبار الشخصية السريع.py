import streamlit as st
import requests

st.markdown("""
<style>
    /* Base RTL settings */
    .rtl, .stMarkdown, .stTitle, p, h1, h2, h3, h4, h5, h6, .stButton {
        direction: rtl;
        text-align: right;
    }
    html, body, [class*="st-"] {
        background-color: #f5f7fa;
    }
            
    /* Ensure slider label text stays RTL */
    .stSlider label {
        text-align: right;
        width: 100%;
        display: block;
    }

</style>
""", unsafe_allow_html=True)


# ุนููุงู ุงููููุน
st.title("ุชุญููู ุดุฎุตูุชู ุจุทุฑููุชูุง ุงูุฎุงุตุฉ")

st.markdown("""
### ูู ุนูุฑู ุญุณููุช ุฅูู ูุงุฆู ุบุฑูุจุ
ูุง ุชุดูู ููุ ุงุญูุง ููุง ูุญูู ุดุฎุตูุชู ููุทูุทู ุนูููุง ุดูู (ุจุญุจ ุทุจุนูุง).

ูู ูุงููููุนุ ูุง ุฑุงุญ ูููู ูู ุฅูู "ุทููุญ ููุจุฏุน" ูุจุณุ ูุง ูุง...
ุฑุงุญ ููุดู ูู ุงูุญูููุฉ ูุงููุฉ: ุฅูู ูุฒุงุฌูุ ุชุญุจ ุงูููุทูุญุ ูุชุฎุงู ูู ุงููุดุงุนุฑ ๐

ุฌุงูุจ ุนูู ุงูุฃุณุฆูุฉ ูุฎูููุง ูุจุฏุฃ ุญููุฉ ุงูุชุญููู โจ
""")

st.markdown("**ุงุฎุชุฑ ูู 0 (ูุง ุฃูุงูู ุฃุจุฏูุง) ุฅูู 5 (ุฃูุงูู ุชูุงููุง)**")

# ุงูุฃุณุฆูุฉ ุญุณุจ ุงูุณูุงุช
questions = {
    'EXT2': 'ุฃูุง ูุง ุฃุชููู ูุซูุฑ',
    'EXT3': 'ุฃุดุนุฑ ุจุงูุฑุงุญุฉ ุญูู ุงููุงุณ',
    'EXT4': 'ุฃูุถู ุฃููู ุจุงูุฎูููุฉ ููุง ุฃููู ูุฑูุฒ ุงูุงูุชุจุงู',
    'EXT5': 'ุฃุจุฏุฃ ุงููุญุงุฏุซุงุช ูู ููุณู',
    'EXT7': 'ุฃุชููู ูุน ูุงุณ ูุซูุฑ ูู ุงูุญููุงุช',
    'EXT9': 'ูุง ุนูุฏู ูุดููุฉ ุฃููู ูุฑูุฒ ุงูุงูุชุจุงู',
    'EXT10': 'ุฃููู ุณุงูุช ููุง ุฃุชุนุงูู ูุน ูุงุณ ูุง ุฃุนุฑููู',
    'EST6': 'ุฃูุฒุนุฌ ุจุณูููุฉ',
    'EST8': 'ูุฒุงุฌู ูุชููุจ ูุซูุฑ',
    'AGR7': 'ูุง ุฃูุชู ูุซูุฑ ุจุงููุงุณ ุงูุขุฎุฑูู',
    'OPN9': 'ุฃูุถู ููุช ุฃููุฑ ูู ุฃุดูุงุก ูุซูุฑุฉ',
    'CSN4': 'ุฃุฎุจุต ุงูุฃููุฑ ููุง ุฃุฑุชุจูุง'
}

responses = {}
for key, question in questions.items():
    responses[key] = st.slider(question, min_value=0, max_value=5, value=3, key=key)

# ุฒุฑ ุงูุฅุฑุณุงู
if st.button("ุงุญูููู!"):
    try:
        res = requests.post("http://127.0.0.1:8000/analyze", json=responses)

        if res.status_code == 200:
            result = res.json()
            st.success("โจ ุชู ุงูุชุญููู! ููุฐู ุงููุชูุฌุฉ ๐")
            st.markdown(f"### Cluster ุฑูู: `{result['cluster']}`")
            st.markdown(f"**{result['description']}**")
            
            st.markdown("#### ุฏุฑุฌุงุชู ูู ุงูุฃุจุนุงุฏ ุงูุฎูุณุฉ:")
            for trait, score in result['scores'].items():
                st.markdown(f"- **{trait.capitalize()}**: {score}")

        else:
            st.error("๐ฅ ุตุงุฑ ุฎุทุฃ ูู ุงูุงุชุตุงู ุจุงูู API. ุชุฃูุฏ ุฃูู ุดุบุงู.")
    except Exception as e:
        st.error(f"โ ูุดู ุงูุงุชุตุงู ุจุงูุณูุฑูุฑ: {e}")
