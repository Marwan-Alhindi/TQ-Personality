import streamlit as st
import pandas as pd
import requests
from collections import Counter
import plotly.graph_objects as go

st.set_page_config(page_title="ุชุตููู ุงูุดุฎุตูุงุช ุญุณุจ ุชูููู ุงูุฒููุงุก", layout="wide")

# ูุตู ูู ููุณุชุฑ
cluster_descriptions = {
    0: "๐ ุฐุง ุงููุงุญุฏ ุงููู ุนุงูุด ุญูุงุชู ุนูู ููุฏ ุฑุงูู. ูู ุดูุก ุนูุฏู \"ุนุงุฏู\"ุ ููููู ููุณู ุงูุณุงุนุฉ ูฅ ุงูุนุตุฑ ููุญูุณ ุจุงูุจูุงูุฑ ููู ููุฎุชูู ุณูุฉ...",
    1: "๐ญ ุฐุง ุงููู ููุจู ุฃููู ูู ุฎุจุฒ ุงูุชููุฑ. ูุจูู ูู ุฅุนูุงู ุฒูู ูููุชุจ ุฎูุงุทุฑ ุนู ุฐูุฑู ููุฏูู...",
    2: "๐ ุฐุง ุงููู ูู ููุช ูู \"ุฎู ูุฑูุญ ุงูุทุงูู\" ูุงูู: \"ุทูุจ ุฃุฑุณู ูู ุนูู ุงูุฅูููู ุงูุฎุทุฉ\"...",
    3: "๐ ุฐุง ุงููู ุชุญุณุจู ุทุงูุน ูู ูุณูุณู ููุฑูุ ุจุณ ูู ุณุงูู ูู ุญู ุงูุฑุจูุนุ ุจุณ ูุง ุฃุญุฏ ูุฏ ุดุงูู...",
    4: "๐ข ูุฐุง ุจุฑูุงู ุนูุงุทู. ูุบูุฑ ุงูุชูุงูุงุชู ุฃุณุฑุน ูู ุนุฑูุถ ูููุ ููู ุดูู ูุฏุฎู ููุงูุฉ ุฌุฏูุฏุฉ..."
}

# ุชูุณูู ุนุงู ููุตูุญุฉ
st.markdown("""
<style>
    html, body, [class*="st-"] {
        font-family: 'Cairo', sans-serif;
        text-align: right;
        background-color: #f5f7fa;
        color: #333;
    }
    h1, h2, h3 {
        color: #2e5cb8;
        margin-bottom: 10px;
        font-family: 'Cairo', sans-serif !important;
    }
    .stSlider label, .stButton>button, .stForm {
        text-align: right;
    }
    .stForm {
        background-color: #f9f9f9;
        padding: 25px;
        border-radius: 15px;
        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
        margin-bottom: 25px;
        border: 1px solid #e0e0e0;
    }
    .stButton>button {
        background-color: #007BFF;
        color: white;
        font-weight: bold;
        border-radius: 8px;
        padding: 10px 20px;
        border: none;
        transition: background-color 0.3s;
    }
    .stButton>button:hover {
        background-color: #0056b3;
    }
</style>
""", unsafe_allow_html=True)

st.title("๐ฅ ุชุทุจูู ุชุตููู ุงูุดุฎุตูุฉ ุญุณุจ ุชูููู ุงูุฒููุงุก")
st.markdown("ูุชู ุชูููู ูู ุดุฎุต ุจูุงุณุทุฉ ุงูุขุฎุฑูู. ูุนุฑุถ ุงููุธุงู ูุชูุณุท ุฏุฑุฌุงุช ุงูุณูุงุช ูุชููุน ุงูุงูุชูุงุก ูุฃุญุฏ ุงููุฌููุนุงุช.")

names = [
    "ูุณู ุนุจุฏุงููุงุฏู ุงูุนุชูุจู", "ุนุจุฏุงูุนุฒูุฒ ููุฏ ุงูุญูุฒุงู", "ุฃุฒูุงุฑ ุณุนูุฏ ุงูุชูููู", "ุนุจุฏุงููุญุณู ุนุงุฏู ุงูุฏุบูู",
    "ุนูุฑ ุณูููุงู ุงูุณุฑูุน", "ุบุงุฏุฉ ุนุจุฏุงูุฑุญูู ุงูุนูุฑู", "ุนุจุฏุงููู ุนูุฑ ุงูุฏุงูู", "ุฑูู ุนูุฑ ูุณููู",
    "ุฑูุงุฏ ุนุจุฏุงูุฑุญูู ุงูุญุฌู", "ููุณู ุณุนุฏ ุงูุฏูุญุงูู", "ูููุฏ ุฅุจุฑุงููู ุฃุจูุงูุณููู", "ุงููููู ุนุจุฏุงููุญุณู ุงูุณููุฏ",
    "ูุฌุฏ ุนุจุฏุงููู ุงูุนุชูุจู", "ุนุจุฏุงููู ุฃุญูุฏ ุงูุฒูุฑุงูู", "ููุตู ููุฏ ุงูุฎููู", "ูุฑุงุณ ุญูุฏ ุงูุณููุฏ",
    "ุฏุงููุฉ ุนูุงุฏ ุงูุฏุจูุณู", "ููุตู ุนุจุฏุงููู ุขู ููุฑุญ", "ูุฌูุงุก ุจุงุณู ุงููุฑุดุฏู", "ูุญูุฏ ุนุจุฏุงููู ุงูุญุณููู",
    "ุนุจุฏุงูุนุฒูุฒ ุฎุงูุฏ ุนุจุฏุงูุนุฒูุฒ ุขู ูุฑูุงู", "ุฑููุงุฏ ุฑุฃูุช ูุงุณูู", "ูุฑูุงู ููุฏ ุงูููุฏู", "ูุฑูู ุนุจุฏุงููู ุงูููุณู",
    "ุนุจุฏุงูุนุฒูุฒ ุณุนุฏ ุงูุฎุฑุฌู"
]

questions = {
    'EXT2': 'ุฃูุง ูุง ุฃุชููู ูุซูุฑ',
    'EXT3': 'ุฃุดุนุฑ ุจุงูุฑุงุญุฉ ุญูู ุงููุงุณ',
    'EXT4': 'ุฃูุถู ุฃููู ุจุงูุฎูููุฉ ููุง ุฃููู ูุฑูุฒ ุงูุงูุชุจุงู',
    'EXT5': 'ุฃุจุฏุฃ ุงููุญุงุฏุซุงุช ูู ููุณู',
    'EXT7': 'ุฃุชููู ูุน ูุงุณ ูุซูุฑ ูู ุงูุญููุงุช',
    'EXT9': 'ูุง ุนูุฏู ูุดููุฉ ุฃููู ูุฑูุฒ ุงูุงูุชุจุงู',
    'EXT10': 'ุฃููู ุณุงูุช ููุง ุฃุชุนุงูู ูุน ูุงุณ ูุง ุฃุนุฑููู',
    'EST6': 'ุฃูุฒุนุฌ ุจุณูููุฉ',
    'EST8': 'ูุฒุงุฌู ูุชููุจ ูุซูุฑ',
    'AGR7': 'ูุง ุฃูุชู ูุซูุฑ ุจุงููุงุณ ุงูุขุฎุฑูู',
    'OPN9': 'ุฃูุถู ููุช ุฃููุฑ ูู ุฃุดูุงุก ูุซูุฑุฉ',
    'CSN4': 'ุฃุฎุจุต ุงูุฃููุฑ ููุง ุฃุฑุชุจูุง'
}

# ===== ูููุฐุฌ ุงูุฅุฏุฎุงู =====
st.subheader("โ๏ธ ุฃุฏุฎู ุชููููู")
with st.form("submit_form"):
    target_person_name = st.selectbox("๐ค ูู ุงูุดุฎุต ุงูุฐู ุชููู ุจุชูููููุ", names, key="target")
    rater_name = st.selectbox("๐ง ูู ุฃูุช (ุงููููููู)ุ", names, key="rater")

    responses = {}
    for key, question in questions.items():
        responses[key] = st.slider(question, min_value=0, max_value=5, value=3, key=key)

    submitted = st.form_submit_button("ุฅุฑุณุงู ุงูุชูููู")

# ===== ุชุญููู ูุฅุฑุณุงู ุงูุจูุงูุงุช ุฅูู API =====
if submitted:
    try:
        payload = {
            "target_person": target_person_name,
            "rater": rater_name,
            **responses  # ููู ุงููุงููุณ responses ููุฏูุฌู ูู ุงูู payload
        }
        res = requests.post("http://localhost:8000/analyze-peer", json=payload)

        if res.status_code == 200:
            result = res.json()
            st.success(f"โ ุชู ุชุณุฌูู ุชููููู ูู {target_person_name} ุจูุฌุงุญ!")

            st.markdown(f"### ุงูููุณุชุฑ ุงูุฎุงุต ุจู {target_person_name}: `{result['cluster']}`")
            st.markdown(f"**{result['description']}**")

            trait_scores = result["scores"]
            summary_df = pd.DataFrame([trait_scores])
            st.dataframe(summary_df.style.format(precision=1), use_container_width=True)

            st.markdown("### ุชูุซูู ูุฑุฆู ูุฃุจุนุงุฏ ุงูุดุฎุตูุฉ")
            traits = list(trait_scores.keys())
            values = [trait_scores[t] * 10 for t in traits]

            fig = go.Figure()
            fig.add_trace(go.Bar(
                x=traits,
                y=values,
                name='ุงูุณูุงุช',
                marker_color='lightgreen',
                opacity=0.6
            ))
            fig.add_trace(go.Scatter(
                x=traits,
                y=values,
                mode='lines+markers',
                name='ูุคุดุฑ ุงูุดุฎุตูุฉ',
                line=dict(color='red'),
                marker=dict(size=10)
            ))
            fig.update_layout(
                title=f"ุชุญููู ุงูุณูุงุช ูู {target_person_name}",
                yaxis=dict(range=[0, 50]),
                xaxis_title="ุงูุจูุนุฏ",
                yaxis_title="ุงูุฏุฑุฌุฉ (ร10)",
                template="plotly_white"
            )
            st.plotly_chart(fig, use_container_width=True)
        else:
            st.error("๐ฅ ุตุงุฑ ุฎุทุฃ ูู ุงูุงุชุตุงู ุจุงูู API. ุชุฃูุฏ ุฃูู ุดุบุงู.")
    except Exception as e:
        st.error(f"โ ูุดู ุงูุงุชุตุงู ุจุงูุณูุฑูุฑ: {e}")
